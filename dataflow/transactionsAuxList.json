{
	"name": "transactionsAuxList",
	"properties": {
		"folder": {
			"name": "Setup Auxiliary Datasets"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Transactions",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "merchantNames",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Select1"
				},
				{
					"name": "Aggregate1"
				}
			],
			"script": "source(output(\n\t\ttransaction_id as long,\n\t\tcustomer_id as long,\n\t\tproduct_id as long,\n\t\tmerchant_name as string,\n\t\ttransaction_description as string,\n\t\ttransaction_amount as long,\n\t\ttype_deposit_withdrawal as string,\n\t\ttransaction_date as timestamp,\n\t\tchannel as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> source1\nsource1 select(mapColumn(\n\t\tmerchant_name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(merchant_name),\n\tcount = count(merchant_name)) ~> Aggregate1\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tinput(\n\t\tmerchant_name as string,\n\t\tcount as long\n\t),\n\tformat: 'parquet',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}