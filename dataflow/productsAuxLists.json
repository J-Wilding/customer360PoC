{
	"name": "productsAuxLists",
	"properties": {
		"folder": {
			"name": "Setup Auxiliary Datasets"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Products",
						"type": "DatasetReference"
					},
					"name": "Products"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "productNameTypeDesc",
						"type": "DatasetReference"
					},
					"name": "ProductNameTypeDesc"
				},
				{
					"dataset": {
						"referenceName": "productIDs",
						"type": "DatasetReference"
					},
					"name": "productIDs"
				},
				{
					"dataset": {
						"referenceName": "ProductIDsCSVTest",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "SelectProductNames"
				},
				{
					"name": "SelectProductIDs"
				},
				{
					"name": "Aggregate1"
				},
				{
					"name": "Aggregate2"
				}
			],
			"script": "source(output(\n\t\tproduct_id as long,\n\t\tproduct_name as string,\n\t\tproduct_type as string,\n\t\tproduct_description as string,\n\t\tissue_date as timestamp,\n\t\tvalid_till_date as timestamp,\n\t\taccount_status as string,\n\t\tcredit_card_limit as long,\n\t\tinterest_rate as double,\n\t\ttenure as long,\n\t\tservice_charges as long,\n\t\tcustomer_id as long,\n\t\tfd_principal_amount as long,\n\t\tloan_collateral_value as long,\n\t\tloan_amount as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> Products\nProducts select(mapColumn(\n\t\tproduct_name,\n\t\tproduct_type,\n\t\tproduct_description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectProductNames\nProducts select(mapColumn(\n\t\tproduct_id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectProductIDs\nSelectProductNames aggregate(groupBy(product_name,\n\t\tproduct_type,\n\t\tproduct_description),\n\tcount = count(product_name)) ~> Aggregate1\nSelectProductIDs aggregate(groupBy(product_id),\n\tcount = count(product_id)) ~> Aggregate2\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tproduct_name as string,\n\t\tproduct_type as string,\n\t\tproduct_description as string,\n\t\tcount as long\n\t),\n\tformat: 'parquet',\n\ttruncate: true,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ProductNameTypeDesc\nAggregate2 sink(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tinput(\n\t\tproduct_id as long\n\t),\n\tformat: 'parquet',\n\ttruncate: true,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> productIDs\nAggregate2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['productsIDsCSVTest'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
		}
	}
}